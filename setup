#!/bin/bash

# A1K Runner Game - Environment Setup Script for Jules
# This script sets up both Node.js and Python environments for the game development

set -e

echo "🎮 Setting up A1K Runner Game Development Environment..."

# Check if we're in the right directory
if [ ! -f "giftbox auto.html" ]; then
    echo "❌ Error: Not in the correct project directory"
    echo "Expected to find 'giftbox auto.html' in current directory"
    exit 1
fi

# 1. Node.js Setup
echo "📦 Setting up Node.js environment..."
cd "a1 a1"

if [ ! -f "package.json" ]; then
    echo "❌ Error: package.json not found in 'a1 a1' directory"
    exit 1
fi

# Install Node.js dependencies
echo "Installing npm dependencies..."
npm install

# Install Playwright browsers
echo "🎭 Installing Playwright browsers..."
npx playwright install

# 2. Python Setup
echo "🐍 Setting up Python environment..."

# Create virtual environment if it doesn't exist
if [ ! -d "../.venv" ]; then
    echo "Creating Python virtual environment..."
    python3 -m venv ../.venv
fi

# Activate virtual environment
echo "Activating virtual environment..."
source ../.venv/bin/activate

# Upgrade pip
echo "Upgrading pip..."
pip install --upgrade pip

# Install core requirements
if [ -f "requirements.txt" ]; then
    echo "Installing core Python dependencies..."
    pip install -r requirements.txt
fi

# Install development requirements
if [ -f "requirements-dev.txt" ]; then
    echo "Installing development Python dependencies..."
    pip install -r requirements-dev.txt
fi

# 3. Verify installations
echo "✅ Verifying installations..."

# Test Python tools
echo "Testing Python tools..."
python -c "import PIL; print('✅ PIL/Pillow working')" || echo "⚠️  PIL needs attention"
python -c "import imageio; print('✅ imageio working')" || echo "⚠️  imageio needs attention"

# Test linting tools
echo "Testing development tools..."
ruff --version && echo "✅ ruff working" || echo "⚠️  ruff needs attention"
black --version && echo "✅ black working" || echo "⚠️  black needs attention"
mypy --version && echo "✅ mypy working" || echo "⚠️  mypy needs attention"

# Test Node.js setup (run a quick test, don't fail on test failures)
echo "Testing Node.js/Playwright setup..."
npm test || echo "⚠️  Some tests may need attention, but setup is complete"

# 4. Generate sample assets to verify tools work
echo "🎨 Testing asset generation..."
if [ -f "tools/generate_flipbooks.py" ]; then
    cd tools
    python generate_flipbooks.py || echo "⚠️  Asset generation had issues, but tools are installed"
    cd ..
fi

cd ..

echo ""
echo "🎉 Setup complete!"
echo ""
echo "📋 Summary:"
echo "  - Node.js dependencies installed"
echo "  - Playwright browsers installed"
echo "  - Python virtual environment created at .venv"
echo "  - Python dependencies installed"
echo "  - Development tools (ruff, black, mypy) ready"
echo ""
echo "🚀 Next steps:"
echo "  1. Activate Python environment: source .venv/bin/activate"
echo "  2. Run tests: cd 'a1 a1' && npm test"
echo "  3. Generate assets: cd 'a1 a1/tools' && python generate_flipbooks.py"
echo "  4. Edit HTML game: open giftbox auto.html"
echo ""
echo "📁 Key files:"
echo "  - giftbox auto.html: Main game file"
echo "  - a1 a1/: Game assets and tools"
echo "  - a1 a1/tools/generate_flipbooks.py: VFX asset generator"
echo "  - a1 a1/tests/: Playwright test suite"